<!-- credits where credit is due https://codepen.io/Hyperplexed/pen/MWQeYLW -->
<div id="cards" class="bg-base-200 ">
  <a>
    <div class="card " onclick="window.location.href='../exams/jeemains';" >
      <div class="card-content  bg-base-300">
        <div class="card-image rounded-lg">
          <img src="./1-min.webp" />
        </div>
        <div class="card-info-wrapper">
          <div class="card-info">
            <div class="card-info-title">
              <a>Jee</a>
              <h4 class="">JEE? More like Just Endure Everything!</h4>
            </div>
          </div>
        </div>
      </div>
    </div>
  </a>
  <a>
    <div class="card" onclick="window.location.href='../exams/neet';">
      <div class="card-content bg-base-300">
        <div class="card-image rounded-lg">
          <img src="./2-min.webp" />
        </div>
        <div class="card-info-wrapper">
          <div class="card-info">
            <div class="card-info-title">
              <a>NEET</a>
              <h4>Not Enough Exercise Today! You get it?</h4>
            </div>
          </div>
        </div>
      </div>
    </div>
  </a>
  <a>
    <div class="card" onclick="window.location.href='../exams/bitsat';">
      <div class="card-content bg-base-300">
        <div class="card-image rounded-lg">
          <img src="./3-min.webp" />
        </div>
        <div class="card-info-wrapper">
          <div class="card-info">
            <div class="card-info-title">
              <a>BITSAT</a>
              <h4>
                Students take pillow to BITSAT? To dream about a good score!
              </h4>
            </div>
          </div>
        </div>
      </div>
    </div>
  </a>
</div>
<style>
  /* :root {
    --bg-color: rgb(20, 20, 20);
    --card-color: rgb(23, 23, 23);
  } */

  body {
    align-items: center;
    /* background-color: var(--bg-color); */
    display: flex;
    justify-content: center;
    margin: 0px;
    overflow: hidden;
    padding: 0px;
  }

  #cards {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
    max-width: 986px;
    width: calc(100% - 20px);
  }

  #cards:hover > .card::after {
    opacity: 1;
  }
  .card {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    cursor: pointer;
    display: flex;
    height: 260px;
    flex-direction: column;
    position: relative;
    width: 300px;
  }

  .card:hover::before {
    opacity: 1;
  }

  .card::before,
  .card::after {
    border-radius: inherit;
    content: "";
    height: 100%;
    left: 0px;
    opacity: 0;
    position: absolute;
    top: 0px;
    transition: opacity 500ms;
    width: 100%;
  }

  .card::before {
    background: radial-gradient(
      800px circle at var(--mouse-x) var(--mouse-y),
      rgba(255, 255, 255, 0.06),
      transparent 40%
    );
    z-index: 3;
  }

  .card::after {
    background: radial-gradient(
      600px circle at var(--mouse-x) var(--mouse-y),
      rgba(255, 255, 255, 0.4),
      transparent 40%
    );
    z-index: 1;
  }

  .card > .card-content {
    /* background-color: var(--card-color); */
    border-radius: inherit;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    inset: 1px;
    padding: 10px;
    position: absolute;
    z-index: 2;
  }

  /* -- ↓ ↓ ↓ extra card content styles ↓ ↓ ↓ -- */

  h1,
  h2,
  h3,
  h4,
  a,
  span {
    /* color: rgb(240, 240, 240); */
    font-family: "Rubik", sans-serif;
    font-weight: 400;
    margin: 0px;
  }

  i {
    /* color: rgb(240, 240, 240); */
  }

  .card-image {
    align-items: center;
    display: flex;
    height: 140px;
    justify-content: center;
    overflow: hidden;
  }

  .card-image > i {
    font-size: 6em;
    opacity: 0.25;
  }

  .card-info-wrapper {
    align-items: center;
    display: flex;
    flex-grow: 1;
    justify-content: flex-start;
    padding: 0px 20px;
  }

  .card-info {
    align-items: flex-start;
    display: flex;
    gap: 10px;
  }

  .card-info > i {
    font-size: 1em;
    height: 20px;
    line-height: 20px;
  }

  .card-info-title > a {
    font-size: 1.1em;
    line-height: 20px;
  }

  .card-info-title > h4 {
    /* color: rgba(255, 255, 255, 0.5); */
    font-size: 0.85em;
    margin-top: 8px;
  }

  /* -- ↓ ↓ ↓ some responsiveness ↓ ↓ ↓ -- */

  @media (max-width: 1000px) {
    body {
      align-items: center;
      overflow: auto;
    }

    #cards {
      max-width: 1000px;
      padding: 10px 0px;
    }

    .card {
      flex-shrink: 1;
      width: calc(50% - 4px);
    }
  }

  @media (max-width: 500px) {
    .card > .card-content {
      background-color: var(--card-color);
      border-radius: inherit;
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      inset: 1px;
      padding: 0px;
      position: absolute;
      z-index: 2;
    }
  }

  @media (max-width: 520px) {
    .card {
      width: 100%;
      margin: 20px;
    }
  }
  @media only screen and (max-width: 600px) {
    #cards {
      max-width: 1000px;
      padding-bottom: 45px;
    }
  }
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 80ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
<script>
  document.getElementById("cards").onmousemove = (e) => {
    for (const card of document.getElementsByClassName(
      "card"
    ) as HTMLCollectionOf<HTMLElement>) {
      const rect = card.getBoundingClientRect(),
        x = e.clientX - rect.left,
        y = e.clientY - rect.top;

      card.style.setProperty("--mouse-x", `${x}px`);
      card.style.setProperty("--mouse-y", `${y}px`);
    }
  };
</script>
